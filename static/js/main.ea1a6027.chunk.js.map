{"version":3,"sources":["hooks/useMorsecode.js","hooks/useAudioMorsecodePlayer.js","components/MorsecodeTranslator/index.js","App.js","serviceWorker.js","index.js"],"names":["MorseCode","MorsecodeAbbrev","HELP","CONFIRM","REPORT","FROM","DISTANCE","MorseKeys","Object","values","AlphaKeys","keys","AbbrevKeys","sort","a","b","length","getMorseCode","chr","codeKey","indexOf","toUpperCase","alphaToMorsecode","msg","morse","split","map","join","replaceWithAbbrev","text","newMessage","forEach","key","replace","require","useState","useRef","getAudioContext","window","AudioContext","webkitAudioContext","setupAudioTrack","actx","message","type","frequency","dotTiming","t","currentTime","oscillator","createOscillator","value","gainRef","createGain","gain","setValueAtTime","character","connect","destination","InputTextArea","styled","textarea","Input","MorsecodeBox","LabelSpan","span","MorseCodeLabel","label","AbbrevTableWrapper","div","AbbrevTable","table","AudioPlayer","labels","messageLabel","morsecodeLabel","sampleMessage","phrase","abbreviation","playAudio","stopAudio","pauseResumeAudio","MorsecodeTranslator","isReplacedAbbrev","setReplacedAbbrev","initial","shouldReplaceWithAbbrev","setMessage","translated","setTranslated","cleanMessage","trim","useEffect","cleanedMessage","tmpMessage","useMorsecode","oscillatorType","morseCode","setMorsecode","isPlaying","setIsPlaying","isSuspended","setIsSuspended","supportsAudio","oscillatorRef","actxRef","play","current","onstatechange","state","track","start","suspend","then","resume","stop","close","useAudioMorsecodePlayer","htmlFor","id","onChange","e","newText","substring","updateMessage","target","checked","onClick","className","disabled","aria-label","readOnly","abbrevList","title","toLowerCase","charAt","slice","renderAbbrev","AppContainer","GithubAnchor","GitHub","href","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea1a6027.chunk.js","sourcesContent":["// Copyright 2019â€“2020, Chris Bautista\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n//\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n//\r\n// ## UseMorsecode Hook\r\n//\r\n// Parameters: \r\n// - initial , value to start with\r\n// - shouldAbbreviate, flag whether you want hook to abbreviate phrases\r\n//\r\n// Hook variables\r\n// - message, the current message (could be abbreviated)\r\n// - translated, the message in morse code\r\n// - setMessage, function to update the message\r\n//\r\nexport default function useMorsecode(initial, shouldReplaceWithAbbrev = true) {\r\n  let [message, setMessage] = useState(initial);\r\n  let [translated, setTranslated] = useState(\"\");\r\n\r\n  function cleanMessage(msg) {\r\n    return msg ? msg.trim() : \"\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    let cleanedMessage = cleanMessage(message);\r\n\r\n    let tmpMessage = shouldReplaceWithAbbrev\r\n      ? replaceWithAbbrev(cleanedMessage)\r\n      : cleanedMessage;\r\n\r\n    if (tmpMessage !== cleanedMessage) {\r\n      setMessage(tmpMessage);\r\n    }\r\n\r\n    setTranslated(alphaToMorsecode(tmpMessage));\r\n  }, [message, shouldReplaceWithAbbrev]);\r\n\r\n  return {\r\n    message,\r\n    translated,\r\n    setMessage,\r\n  };\r\n}\r\n\r\nconst MorseCode = {\r\n  \".-\": \"A\",\r\n  \"-...\": \"B\",\r\n  \"-.-.\": \"C\",\r\n  \"-..\": \"D\",\r\n  \".\": \"E\",\r\n  \"..-.\": \"F\",\r\n  \"--.\": \"G\",\r\n  \"....\": \"H\",\r\n  \"..\": \"I\",\r\n  \".---\": \"J\",\r\n  \"-.-\": \"K\",\r\n  \".-..\": \"L\",\r\n  \"--\": \"M\",\r\n  \"-.\": \"N\",\r\n  \"---\": \"O\",\r\n  \".--.\": \"P\",\r\n  \"--.-\": \"Q\",\r\n  \".-.\": \"R\",\r\n  \"...\": \"S\",\r\n  \"-\": \"T\",\r\n  \"..-\": \"U\",\r\n  \"...-\": \"V\",\r\n  \".--\": \"W\",\r\n  \"-..-\": \"X\",\r\n  \"-.--\": \"Y\",\r\n  \"--..\": \"Z\",\r\n  \"-----\": \"0\",\r\n  \".----\": \"1\",\r\n  \"..---\": \"2\",\r\n  \"...--\": \"3\",\r\n  \"....-\": \"4\",\r\n  \".....\": \"5\",\r\n  \"-....\": \"6\",\r\n  \"--...\": \"7\",\r\n  \"---..\": \"8\",\r\n  \"----.\": \"9\",\r\n\r\n  /* punctuation marks */\r\n\r\n  \"..--..\": \".\",\r\n  \"._.--\": \",\",\r\n  \"-.- . .\": \":\",\r\n  \"-..-.\": \"?\",\r\n  \"..-. .-..\": \"'\",\r\n  \"... .-..\": \"-\",\r\n  \"..- -\": \"/\",\r\n  \"..... -.\": \"(\",\r\n  \"..... .. ..\": \")\",\r\n  \"..-. -.\": '\"',\r\n  \". ...\": \"&\",\r\n  \"---.\": \"!\",\r\n  \"... ..\": \";\",\r\n};\r\n\r\nexport const MorsecodeAbbrev = {\r\n  HELP: \"SOS\",\r\n  \"I SAY AGAIN\": \"II\",\r\n  CONFIRM: \"CFM\",\r\n  REPORT: \"RPT\",\r\n  \"REPEAT PLEASE\": \"RPT\",\r\n  \"I REPEAT AS FOLLOWS\": \"RPT\",\r\n  \"YES; CORRECT\": \"C\",\r\n  FROM: \"FM\",\r\n  \"THIS IS\": \"DE\",\r\n  DISTANCE: \"DX\",\r\n  \"INVITATION TO TRANSMIT\": \"K\",\r\n};\r\n\r\nconst MorseKeys = Object.values(MorseCode);\r\nconst AlphaKeys = Object.keys(MorseCode);\r\nconst AbbrevKeys = Object.keys(MorsecodeAbbrev).sort(\r\n  (a, b) => b.length - a.length\r\n);\r\n\r\nfunction getMorseCode(chr) {\r\n  if (chr === \" \") return \"/\";\r\n\r\n  let codeKey = MorseKeys.indexOf(chr.toUpperCase());\r\n  if (codeKey === -1 && chr !== \" \") {\r\n    return \"\";\r\n  }\r\n\r\n  return AlphaKeys[codeKey];\r\n}\r\n\r\nfunction alphaToMorsecode(msg) {\r\n  if (typeof msg !== \"string\") {\r\n    return \"invalid msg\";\r\n  }\r\n  const morse = msg.split(\"\").map(getMorseCode);\r\n  return `${morse.join(\" \")}`;\r\n}\r\n\r\nfunction replaceWithAbbrev(text) {\r\n  if (!text || typeof text !== \"string\") {\r\n    return \"\";\r\n  }\r\n\r\n  let newMessage = text.toUpperCase();\r\n  AbbrevKeys.forEach((key) => {\r\n    let abbrevIndex = newMessage.indexOf(key);\r\n    if (abbrevIndex !== -1) {\r\n      newMessage = newMessage.replace(key, MorsecodeAbbrev[key]);\r\n    }\r\n  });\r\n\r\n  return newMessage;\r\n}\r\n","const { useState, useRef } = require(\"react\");\r\n\r\n// \r\n// useAudioMorseCodePlayer\r\n// \r\n// Parameters: \r\n// - initial, value to start with\r\n// - oscillatorType, (default \"sine\")\r\n// - frequency, (default \"750\") - Hz\r\n// - dotTiming, (default \"0.08\") -- computation T = 1.2s / 15 wpm(words per min)\r\n// > https://en.wikipedia.org/wiki/Morse_code#Representation,_timing,_and_speeds \r\n//\r\n// Hook variables\r\n// - play, play generated audio\r\n// - stop, stop generated audio\r\n// - suspend, pause generated audio\r\n// - isPlaying, flag when audio is playing\r\n// - isSuspended, flag when paused\r\n// - supportsAudio, this is set to TRUE if browser supports audio\r\n// - setMorsecode, function to set encoded message\r\n//\r\nexport default function useAudioMorseCodePlayer(\r\n  initial,\r\n  oscillatorType = \"sine\",\r\n  frequency = 750, \r\n  dotTiming = 0.08 \r\n) {\r\n  let [morseCode, setMorsecode] = useState(initial);\r\n  let [isPlaying, setIsPlaying] = useState(false);\r\n  let [isSuspended, setIsSuspended] = useState(false);\r\n  let supportsAudio = window.AudioContext || window.webkitAudioContext;\r\n\r\n  let oscillatorRef = useRef();\r\n  let actxRef = useRef();\r\n\r\n  function play() {\r\n    if (isPlaying || !actxRef) {\r\n      return;\r\n    }\r\n\r\n    actxRef.current = getAudioContext();\r\n    actxRef.current.onstatechange = function () {\r\n      if (actxRef.current.state === \"closed\") {\r\n        setIsPlaying(false);\r\n        setIsSuspended(false);\r\n      }\r\n    };\r\n\r\n    let track = setupAudioTrack(\r\n      actxRef.current,\r\n      morseCode,\r\n      oscillatorType,\r\n      frequency,\r\n      dotTiming\r\n    );\r\n\r\n    track.oscillator.connect(track.gainRef);\r\n    track.gainRef.connect(actxRef.current.destination);\r\n\r\n    oscillatorRef.current = track.oscillator;\r\n\r\n    setIsPlaying(true);\r\n    setIsSuspended(false);\r\n    oscillatorRef.current.start(0);\r\n  }\r\n\r\n  function suspend() {\r\n    if (!isPlaying) {\r\n      return;\r\n    }\r\n\r\n    if (actxRef.current.state === \"running\") {\r\n      actxRef.current.suspend().then(function () {\r\n        setIsSuspended(true);\r\n      });\r\n    } else if (actxRef.current.state === \"suspended\") {\r\n      actxRef.current.resume().then(function () {\r\n        setIsSuspended(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  function stop() {\r\n    if (!isPlaying) {\r\n      return;\r\n    }\r\n\r\n    actxRef.current.close().then(function () {\r\n      setIsPlaying(false);\r\n    });\r\n  }\r\n\r\n  return {\r\n    play,\r\n    stop,\r\n    suspend,\r\n    isPlaying,\r\n    isSuspended,\r\n    supportsAudio,\r\n    setMorsecode,\r\n  };\r\n}\r\n\r\nexport function getAudioContext() {\r\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n  const actx = new AudioContext();\r\n  return actx;\r\n}\r\n\r\nfunction setupAudioTrack(actx, message, type, frequency, dotTiming) {\r\n  var t = actx.currentTime;\r\n\r\n  var oscillator = actx.createOscillator();\r\n  oscillator.type = type;\r\n  oscillator.frequency.value = frequency;\r\n\r\n  var gainRef = actx.createGain();\r\n  gainRef.gain.setValueAtTime(0, t);\r\n\r\n  message.split(\"\").forEach(function (character) {\r\n    switch (character) {\r\n      case \".\":\r\n        gainRef.gain.setValueAtTime(1, t);\r\n        t += dotTiming;\r\n        gainRef.gain.setValueAtTime(0, t);\r\n        t += dotTiming;\r\n        break;\r\n      case \"-\":\r\n        gainRef.gain.setValueAtTime(1, t);\r\n        t += 3 * dotTiming;\r\n        gainRef.gain.setValueAtTime(0, t);\r\n        t += dotTiming;\r\n        break;\r\n      case \"/\":\r\n        t += 7 * dotTiming;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  oscillator.connect(gainRef);\r\n  gainRef.connect(actx.destination);\r\n\r\n  return { gainRef, oscillator };\r\n}\r\n","// Copyright 2019â€“2020, Chris Bautista\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n//\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useMorsecode, { MorsecodeAbbrev } from \"../../hooks/useMorsecode\";\r\nimport useAudioMorsecodePlayer from \"../../hooks/useAudioMorsecodePlayer\";\r\n\r\nconst MAXCHARACTERS = 250;\r\n\r\nconst InputTextArea = styled.textarea`\r\n  border: 1px solid #ddd;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin: 8px 0 0;\r\n  border-radius: 3px;\r\n  height: 120px;\r\n  font-family: \"Courier New\", monospace;\r\n`;\r\n\r\nconst Input = styled(InputTextArea)`\r\n  border: 1px solid red;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst MorsecodeBox = styled(InputTextArea)`\r\n  border: 1px solid #ddd;\r\n  font-weight: bold;\r\n  line-height: 1.8;\r\n  background-color: #ededed;\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nconst LabelSpan = styled.span`\r\n  display: inline-block;\r\n  padding: 0 8px;\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nconst MorseCodeLabel = styled.label`\r\n  margin-top: 1.2rem;\r\n  display: block;\r\n`;\r\n\r\nconst AbbrevTableWrapper = styled.div`\r\n  font-size: 0.75rem;\r\n  margin-top: 2rem;\r\n  width: auto;\r\n  height: 200px;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  display: inline-block;\r\n  padding: 5px 8px;\r\n`;\r\n\r\nconst AbbrevTable = styled.table`\r\n  th {\r\n    background-color: #ddd;\r\n  }\r\n  td,\r\n  th {\r\n    text-align: left;\r\n    border: 1px solid #ddd;\r\n    padding: 4px;\r\n  }\r\n`;\r\n\r\nconst AudioPlayer = styled.div`\r\n  margin-top: 1rem;\r\n  margin-left: -5px;\r\n  button {\r\n    min-width: 40px;\r\n    height: 40px;\r\n    margin: 0 3px;\r\n    font-weight: 800;\r\n    border-radius: 4px;\r\n    border: 0;\r\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.3);\r\n\r\n    &:disabled{\r\n      background-color: #9f9f9f;\r\n    }\r\n\r\n    &:focus{\r\n      border: 0;\r\n      box-shadow: 0 -2px 2px 0 rgba(0,0,0,0.3);\r\n    }\r\n  }\r\n`;\r\n\r\nconst labels = {\r\n  messageLabel: \"Message\",\r\n  morsecodeLabel: \"Morse code\",\r\n  sampleMessage: \"Nothing like potatoes.\",\r\n  replaceWithAbbrev: \"Replace with abbreviations.(see list at the bottom)\",\r\n  phrase: \"Phrase\",\r\n  abbreviation: \"Abbreviation\",\r\n  playAudio: \"Play audio\",\r\n  stopAudio: \"Stop audio\",\r\n  pauseResumeAudio: \"Pause/Resume\",\r\n};\r\n\r\nconst MorsecodeTranslator = () => {\r\n  let [isReplacedAbbrev, setReplacedAbbrev] = useState(false);\r\n  let { message, translated, setMessage } = useMorsecode(\r\n    labels.sampleMessage.toUpperCase(),\r\n    isReplacedAbbrev\r\n  );\r\n  let {\r\n    play,\r\n    stop,\r\n    suspend,\r\n    setMorsecode,\r\n    isPlaying,\r\n    isSuspended,\r\n    supportsAudio,\r\n  } = useAudioMorsecodePlayer(message);\r\n\r\n  function onReplaceAbbrev(e) {\r\n    setReplacedAbbrev(e.target.checked);\r\n  }\r\n\r\n  function updateMessage(text) {\r\n    let newText = text;\r\n    if (text.length > MAXCHARACTERS) {\r\n      newText = newText.substring(0, MAXCHARACTERS);\r\n    }\r\n    setMessage(newText);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setMorsecode(translated);\r\n  }, [translated, setMorsecode]);\r\n\r\n  function renderAbbrev() {\r\n    const abbrevList = Object.keys(MorsecodeAbbrev).map((key) => {\r\n      let title = key.toLowerCase();\r\n      title = title.charAt(0).toUpperCase() + title.slice(1);\r\n      return (\r\n        <tr key={\"abbrev\" + key}>\r\n          <td>{MorsecodeAbbrev[key]}</td>\r\n          <td>{title}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <AbbrevTableWrapper>\r\n        <AbbrevTable>\r\n          <thead>\r\n            <tr>\r\n              <th>{labels.abbreviation}</th>\r\n              <th>{labels.phrase}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{abbrevList}</tbody>\r\n        </AbbrevTable>\r\n      </AbbrevTableWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"mpMessageBox\">{labels.messageLabel}</label>\r\n      <Input\r\n        id=\"mpMessageBox\"\r\n        value={message}\r\n        onChange={(e) => updateMessage(e.target.value.toUpperCase())}\r\n      />\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={1}\r\n            checked={isReplacedAbbrev}\r\n            onChange={onReplaceAbbrev}\r\n          />\r\n          <LabelSpan>{labels.replaceWithAbbrev}</LabelSpan>\r\n        </label>\r\n      </div>\r\n      {supportsAudio && (\r\n        <AudioPlayer>\r\n          <button\r\n            onClick={play}\r\n            className=\"play\"\r\n            disabled={!message || isPlaying}\r\n            aria-label={labels.playAudio}\r\n          >\r\n            {\"[>\"}\r\n          </button>\r\n          <button\r\n            onClick={suspend}\r\n            className=\"suspend\"\r\n            disabled={!message || (!isPlaying && !isSuspended)}\r\n            aria-label={labels.pauseResumeAudio}\r\n          >\r\n            {isSuspended ? \"[>>\" : \"||\"}\r\n          </button>\r\n          <button\r\n            onClick={stop}\r\n            className=\"stop\"\r\n            disabled={!message || !isPlaying}\r\n            aria-label={labels.stopAudio}\r\n          >\r\n            {\"[]\"}\r\n          </button>\r\n        </AudioPlayer>\r\n      )}\r\n      <MorseCodeLabel htmlFor=\"mpMorsecodeBox\">\r\n        {labels.morsecodeLabel}\r\n      </MorseCodeLabel>\r\n      <MorsecodeBox id=\"mpMorsecodeBox\" value={translated} readOnly />\r\n      <div>{renderAbbrev()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MorsecodeTranslator;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport MorsecodeTranslator from \"./components/MorsecodeTranslator\";\n\nconst AppContainer = styled.div`\n  padding: 1rem 2rem;\n  margin: 0 auto;\n  max-width: 800px;\n  @media screen and (max-width: 840px) {\n    padding: 1rem;\n  }\n`;\n\nconst GithubAnchor = styled.a`\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 1rem;\n  background-color: yellow;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);\n\n  @media screen and (max-width: 840px) {\n    width: 20px;\n    font-size: 0.75rem;\n    line-height: 1.5;\n    padding: 5px;\n    text-decoration: none;\n    text-align: right;\n    writing-mode: vertical-rl;\n    text-orientation: upright;\n    top: 0;\n    span {\n      display:none;\n    }\n  }\n`;\n\nfunction GitHub() {\n  return (\n    <GithubAnchor href=\"https://github.com/chrisbautista/morsecode-potato\">\n      <span>codespud @ </span>github\n    </GithubAnchor>\n  );\n}\n\nfunction App() {\n  return (\n    <AppContainer>\n      <h1>Morsecode-Potato</h1>\n      <MorsecodeTranslator />\n      <GitHub />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}